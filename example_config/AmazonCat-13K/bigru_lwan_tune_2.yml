# data
data_dir: data/AmazonCat-13K
data_name: AmazonCat-13K
min_vocab_freq: 1
max_seq_length: 500
include_test_labels: false

# train
seed: 1337
epochs: 50
batch_size: 64
optimizer: adam
learning_rate: ['grid_search', [0.0003, 0.0001]]
momentum: 0
weight_decay: 0
patience: 10
shuffle: true

# eval
eval_batch_size: 64
monitor_metrics: ['RP@5']
val_metric: RP@5

# model
model_name: BiGRULWAN
init_weight: kaiming_uniform
network_config:
  embed_dropout: ['grid_search', [0.2, 0.4]]
  encoder_dropout: ['grid_search', [0.2, 0.4]]
  rnn_dim: ['grid_search', [256, 512]]
  rnn_layers: 1

# pretrained vocab / embeddings
vocab_file: null
embed_file: glove.6B.200d
normalize_embed: false

# hyperparamter search
search_alg: basic_variant
embed_cache_dir: .vector_cache
num_samples: 1
scheduler: null
# Uncomment the following lines to enable the ASHAScheduler.
# See the documentation here: https://docs.ray.io/en/latest/tune/api_docs/schedulers.html#asha-tune-schedulers-ashascheduler
#scheduler:
  #time_attr: training_iteration
  #max_t: 50 # the maximum epochs to run for each config (parameter R in the ASHA paper)
  #grace_period: 10 # the minimum epochs to run for each config (parameter r in the ASHA paper)
  #reduction_factor: 3 # reduce the number of configuration to floor(1/reduction_factor) each round of successive halving (called rung in ASHA paper)
  #brackets: 1 # number of brackets. A smaller bracket index (parameter s in the ASHA paper) means earlier stopping (i.e., less total resources used)

# other parameters specified in main.py::get_args
checkpoint_path: null
cpu: false
data_workers: 4
eval: false
label_file: null
limit_train_batches: 1.0
limit_val_batches: 1.0
limit_test_batches: 1.0
metric_threshold: 0.5
result_dir: runs
save_k_predictions: 0
silent: true
test_path: null
train_path: null
val_path: null
val_size: 0.2
